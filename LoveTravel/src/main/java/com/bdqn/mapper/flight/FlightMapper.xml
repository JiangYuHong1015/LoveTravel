<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdqn.mapper.flight.FlightMapper" >
  <resultMap id="BaseResultMap" type="com.bdqn.pojo.Flight" >
    <id column="FID" property="fid" jdbcType="VARCHAR" />
    <result column="LID" property="lid" jdbcType="VARCHAR" />
    <result column="leave_time" property="leaveTime" jdbcType="VARCHAR" />
    <result column="arrive_time" property="arriveTime" jdbcType="VARCHAR" />
    <result column="total_time" property="totalTime" jdbcType="DOUBLE" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="seats_leave" property="seatsLeave" jdbcType="INTEGER" />
    <result column="AID" property="aid" jdbcType="INTEGER" />
    <result column="time_id" property="timeId" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="getFlyTicketList" resultType="flight">
  
 	SELECT e.* FROM
		(SELECT * FROM flight f ,

			(SELECT l.arriveAirport,l.arriveCity,l.leaveAirport,l.lineType,l.LID AS lineID FROM line l
				WHERE l.arrivecity=#{arriveCity} AND l.leavecity=#{leaveCity}) AS c,

			(SELECT a.AID AS airlineId ,a.AirlineName FROM airlines a ) AS b

				WHERE f.LID=c.lineID
				AND b.airlineId = f.AID) AS e
	where 1=1
	<if test="AirlineName != null and AirlineName != '' ">
		and e.AirlineName=#{AirlineName}
	</if>
	ORDER BY e.timeid 
  
<!--   
  	SELECT f.`FID`,f.`leaveTime`,f.`arriveTime`,f.`price`,f.`AID`,f.LID,f.totalTime,f.`price`
		FROM flight f WHERE f.`LID`=
			(SELECT l.`LID`
				FROM line l
					WHERE l.`arriveCity`=#{arriveCity}
						AND l.`leaveCity`=#{leaveCity}) -->
  
  
  </select>
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    FID, LID, leave_time, arrive_time, total_time, price, seats_leave, AID, time_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bdqn.pojo.FlightExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flight
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from flight
    where FID = #{fid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from flight
    where FID = #{fid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bdqn.pojo.FlightExample" >
    delete from flight
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bdqn.pojo.Flight" >
    insert into flight (FID, LID, leave_time, 
      arrive_time, total_time, price, 
      seats_leave, AID, time_id
      )
    values (#{fid,jdbcType=VARCHAR}, #{lid,jdbcType=VARCHAR}, #{leaveTime,jdbcType=VARCHAR}, 
      #{arriveTime,jdbcType=VARCHAR}, #{totalTime,jdbcType=DOUBLE}, #{price,jdbcType=INTEGER}, 
      #{seatsLeave,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{timeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bdqn.pojo.Flight" >
    insert into flight
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        FID,
      </if>
      <if test="lid != null" >
        LID,
      </if>
      <if test="leaveTime != null" >
        leave_time,
      </if>
      <if test="arriveTime != null" >
        arrive_time,
      </if>
      <if test="totalTime != null" >
        total_time,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="seatsLeave != null" >
        seats_leave,
      </if>
      <if test="aid != null" >
        AID,
      </if>
      <if test="timeId != null" >
        time_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=VARCHAR},
      </if>
      <if test="lid != null" >
        #{lid,jdbcType=VARCHAR},
      </if>
      <if test="leaveTime != null" >
        #{leaveTime,jdbcType=VARCHAR},
      </if>
      <if test="arriveTime != null" >
        #{arriveTime,jdbcType=VARCHAR},
      </if>
      <if test="totalTime != null" >
        #{totalTime,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="seatsLeave != null" >
        #{seatsLeave,jdbcType=INTEGER},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="timeId != null" >
        #{timeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bdqn.pojo.FlightExample" resultType="java.lang.Integer" >
    select count(*) from flight
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update flight
    <set >
      <if test="record.fid != null" >
        FID = #{record.fid,jdbcType=VARCHAR},
      </if>
      <if test="record.lid != null" >
        LID = #{record.lid,jdbcType=VARCHAR},
      </if>
      <if test="record.leaveTime != null" >
        leave_time = #{record.leaveTime,jdbcType=VARCHAR},
      </if>
      <if test="record.arriveTime != null" >
        arrive_time = #{record.arriveTime,jdbcType=VARCHAR},
      </if>
      <if test="record.totalTime != null" >
        total_time = #{record.totalTime,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.seatsLeave != null" >
        seats_leave = #{record.seatsLeave,jdbcType=INTEGER},
      </if>
      <if test="record.aid != null" >
        AID = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.timeId != null" >
        time_id = #{record.timeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update flight
    set FID = #{record.fid,jdbcType=VARCHAR},
      LID = #{record.lid,jdbcType=VARCHAR},
      leave_time = #{record.leaveTime,jdbcType=VARCHAR},
      arrive_time = #{record.arriveTime,jdbcType=VARCHAR},
      total_time = #{record.totalTime,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=INTEGER},
      seats_leave = #{record.seatsLeave,jdbcType=INTEGER},
      AID = #{record.aid,jdbcType=INTEGER},
      time_id = #{record.timeId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bdqn.pojo.Flight" >
    update flight
    <set >
      <if test="lid != null" >
        LID = #{lid,jdbcType=VARCHAR},
      </if>
      <if test="leaveTime != null" >
        leave_time = #{leaveTime,jdbcType=VARCHAR},
      </if>
      <if test="arriveTime != null" >
        arrive_time = #{arriveTime,jdbcType=VARCHAR},
      </if>
      <if test="totalTime != null" >
        total_time = #{totalTime,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="seatsLeave != null" >
        seats_leave = #{seatsLeave,jdbcType=INTEGER},
      </if>
      <if test="aid != null" >
        AID = #{aid,jdbcType=INTEGER},
      </if>
      <if test="timeId != null" >
        time_id = #{timeId,jdbcType=INTEGER},
      </if>
    </set>
    where FID = #{fid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bdqn.pojo.Flight" >
    update flight
    set LID = #{lid,jdbcType=VARCHAR},
      leave_time = #{leaveTime,jdbcType=VARCHAR},
      arrive_time = #{arriveTime,jdbcType=VARCHAR},
      total_time = #{totalTime,jdbcType=DOUBLE},
      price = #{price,jdbcType=INTEGER},
      seats_leave = #{seatsLeave,jdbcType=INTEGER},
      AID = #{aid,jdbcType=INTEGER},
      time_id = #{timeId,jdbcType=INTEGER}
    where FID = #{fid,jdbcType=VARCHAR}
  </update>
</mapper>